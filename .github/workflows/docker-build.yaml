##  Named of the workflow.
name: Docker build
## Set the trigger policy.
## In this case, the workflow is execute on a `push` event,
## or when a new commit is pushed to the repository
on: 
  push:
     branches: [ master ]
  pull_request:
    branches: [ master ]
## List the steps to be executed by the workflow
jobs:
  ## Set the name of the job
  dockerbuild:
    ## Configure the operating system the workflow should run on.
    ## In this case, the job on Ubuntu
    runs-on: ubuntu-latest
    ## Define a sequence of steps to be executed 
    steps:
      ## Use the public `checkout` action in version v2 to checkout the existing code in the repository
       -
        name: Checkout
        uses: actions/checkout@v2
       ## Use the public `checkout` action in version v2 to checkout the existing code in the repository
       -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      ## Use the public `setup-python` action  in version v2 to install python on the  Ubuntu based environment
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
           
       -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: {{ YOUR_DOCKERHUB_REPOSITORY }}/python-helloworld:latest
    
